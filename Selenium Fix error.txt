Element is not clickable at point (x, y). Other element would receive the click

		WebElement ele = driver.findElement(By.cssSelector("#fBtnLogin"));
		JavascriptExecutor executor = (JavascriptExecutor)driver;
		executor.executeScript("arguments[0].click();", ele);

Condition: JavascriptExecutor js = (JavascriptExecutor) driver;
			------------------------------------
		Actions actions = new Actions(driver);
	  	actions.moveToElement(searchTaskControlButton).click().build().perform();

Swith Frame
		driver.switchTo().frame("frameUserSelection");
		driver.findElement(By.id("fCbpUserSelection_ASPxPanel1_fPnlEmpIdentification_fTbxEmpUserId_I")).sendKeys(sUserID);
		driver.findElement(By.id("fCbpUserSelection_ASPxPanel1_fPnlEmpIdentification_fTbxEmpSecPassword_I")).sendKeys(sPassword2);
		driver.findElement(By.id("fCbpUserSelection_ASPxPanel1_fPnlEmpIdentification_fBtnLogin_B")).click();
		driver.switchTo().defaultContent();

Handle new opened browser windows
	 // Store the current window handle
	String winHandleBefore = driver.getWindowHandle();
	// Perform the click operation that opens new window
	// Switch to new window opened
	for(String winHandle : driver.getWindowHandles()){
  	  driver.switchTo().window(winHandle);
	}
	// Perform the actions on new window
	// Close the new window, if that window no more required
	driver.close();
	// Switch back to original browser (first window)
	driver.switchTo().window(winHandleBefore);
	// Continue with original browser (first window)

lay chuoi ky tu cuoi cung den khoang trong tiep theo

	String Sales_Order_ID = getTextMessages.substring(getTextMessages.lastIndexOf(" ")+1);
-Ngược lại 
	String firstAccountName = getCells.substring(0, getCells.indexOf(" "));  

Scroll up, down to element 
	((JavascriptExecutor) driver).executeScript ("arguments[0].scrollIntoView();", colator);

Hover
	Actions builder = new Actions(driver);

	builder.moveToElement(element).build().perform();

Hanle table
List<WebElement> tableRows = customerTable.findElements(By.tagName("tr"));
		int rowCount = tableRows.size();
		for (int row = 0; row < rowCount; row++) {
			List<WebElement> columnsRow = customerTable.findElements(By.tagName("td"));
			String rowtext = tableRows.get(row).getText();
//			System.out.println(rowtext);
			String firstAccountName = rowtext.substring(0, rowtext.indexOf(" "));
			System.out.println(firstAccountName);
			 if(firstAccountName.trim() == "QPQHRc") {
				 System.out.println(firstAccountName.trim() + " == Match with == " + accountName);
				 break;
			 }else {
				 System.out.println(firstAccountName.trim() + " == No Match with == " + accountName);
			 }
			 
//			 --------------------------------------------------
			 
			int columnsCount = columnsRow.size();
////			System.out.println("Numb of cells in Row " + row + " are " + columnsCount);
			for (int column = 0; column < columnsCount; column++) {
				 String celtext = columnsRow.get(column).getText();
//				 System.out.println(celtext);
////	    	        System.out.println("Cell Value of row number " + row + " and column number " + column + " Is " + celtext);
				 if(celtext=="QPQHRc") {
					 System.out.println(celtext.trim() + " == Match with == " + accountName);
					 break;
				 }else {
					 System.out.println(celtext.trim() + " == No Match with == " + accountName);
				 }
				 System.out.println("=======================================");
			}
			System.out.println("=======================================");
		}

Find 1st sibling depend on 2nd sibling

WebElement hoverListProcess = driver.findElement(By.xpath("//*[contains(text(), '" + sProcessName + "')]/preceding-sibling::a[1]"));
@FindBy (xpath = "//*[contains(text(), 'DISK')]")
	WebElement Disk3;

Handle Dynamic Element

        I often use "contains", but there are more. Here are some examples:
           multiple condition: //div[@class='bubble-title' and contains(text(), 'Cover')]
            partial match: //span[contains(text(), 'Assign Rate')]
            starts-with: //input[starts-with(@id,'reportcombo')]
            value has spaces: //div[./div/div[normalize-space(.)='More Actions...']]
            sibling: //td[.='LoadType']/following-sibling::td[1]/select"
            more complex: //td[contains(normalize-space(@class), 'actualcell sajcell-row-lines saj-special x-grid-row-collapsed')]
        Take a look at the W3C XSL Functions page for some more ideas.

